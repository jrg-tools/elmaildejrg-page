---
import Layout from '@/layouts/Layout.astro';
import { api } from '@/lib/api';
import type { Newsletter } from '@/lib/types';
import { SignedIn } from '@clerk/astro/components';
import type { ApiFetchOptions } from '@/lib/api';

// Get current page from URL params
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const pageSize = 20; // Reduced for better pagination demo
let totalPages = 0;

let list: Newsletter[] = [];
let totalCount = 0;
let config: ApiFetchOptions = {
  params: {
    size: pageSize,
    page: currentPage,
  },
};

const auth = Astro.locals.auth();
if (auth.userId) {
  try {
    const token = await auth.getToken();
    if (token) {
      config = {
        ...config,
        token: token,
      };
    }
  } catch {}
}

try {
  const { list: newsletters, total } = await api.get('/newsletter', config);
  list = newsletters;
  totalCount = total;
  totalPages = Math.ceil(totalCount / pageSize);
} catch (error) {
  return new Response(null, { status: 404 });
}
---

<Layout>
  <main
    class="max-w-screen-md px-4 mb-24 object-center m-auto text-left select-none codex-editor pt-4 md:pt-8"
  >
    <div
      class="mt-8 flex items-center justify-center space-x-4 text-sm text-zinc-500 dark:text-zinc-400 mb-12"
    >
      <span class="flex items-center">
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        {totalCount} newsletters
      </span>
    </div>

    <!-- Newsletter Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <SignedIn>
        <a
          href="/edit"
          class="bg-zinc-100/50 dark:bg-zinc-900/50 p-4 rounded-md flex items-center justify-center hover:bg-zinc-200/50 dark:hover:bg-zinc-800 transition-colors duration-200"
        >
          <span
            class="flex items-center gap-2 text-zinc-700 dark:text-zinc-200 font-medium"
          >
            <svg
              class="w-6 h-6"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 4v16m8-8H4"></path>
            </svg>
          </span>
        </a>
      </SignedIn>

      {
        list.map((newsletter) => (
          <article class="relative bg-zinc-100/50 dark:bg-zinc-900/50 p-4 rounded-md">
            {!newsletter.isPublished && (
              <span class="absolute top-0 left-0 flex size-3 z-10">
                <span class="absolute inline-flex h-full w-full animate-ping rounded-full bg-yellow-400 opacity-75" />
                <span class="relative inline-flex size-3 rounded-full bg-yellow-500" />
              </span>
            )}

            <div class="flex items-start justify-between gap-4">
              <a
                href={`/archive/${newsletter.slug}`}
                class="hover:text-yellow-600 no-underline hover:no-underline flex-1 group gap-2 flex flex-col"
              >
                <h2 class="text-xl font-bold text-slate-900 dark:text-white group-hover:text-yellow-600 dark:group-hover:text-yellow-400 transition-colors duration-300 line-clamp-2 relative">
                  {newsletter.slug
                    .split('-')
                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                    .join(' ')}
                </h2>
                <div class="flex items-center text-sm text-zinc-500 dark:text-zinc-400 mb-4">
                  <svg
                    class="w-4 h-4 mr-2"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <time datetime={newsletter.createdAt}>
                    {new Date(newsletter.createdAt).toLocaleDateString(
                      'es-ES',
                      {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                      }
                    )}
                  </time>
                </div>
              </a>

              <SignedIn>
                <a
                  href={`/edit/${newsletter.slug}`}
                  class="inline-flex items-center px-3 py-1.5 text-xs font-medium text-zinc-600 dark:text-zinc-400 bg-white dark:bg-zinc-950 rounded-lg hover:bg-zinc-200/50 dark:hover:bg-zinc-800 transition-colors duration-200 no-underline hover:no-underline flex-shrink-0"
                >
                  <svg
                    class="w-3 h-3 mr-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                    />
                  </svg>
                  Editar
                </a>
              </SignedIn>
            </div>
          </article>
        ))
      }
    </div>
  </main>
</Layout>
