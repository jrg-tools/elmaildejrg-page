---
import Layout from '@/layouts/Layout.astro';
import { api } from '@/lib/api';
import type { Newsletter } from '@/lib/types';
import { SignedIn } from '@clerk/astro/components';
import type { ApiFetchOptions } from '@/lib/api';

export const prerender = false;

// Get current page from URL params
const url = new URL(Astro.request.url);
const currentPage = parseInt(url.searchParams.get('page') || '1');
const pageSize = 15; // Reduced for better pagination demo
let totalPages = 0;

let list: Newsletter[] = [];
let totalCount = 0;
let config: ApiFetchOptions = {
  params: {
    size: pageSize,
    page: currentPage,
  },
};

const { isAuthenticated, getToken } = Astro.locals.auth();

if (isAuthenticated) {
  const token = await getToken();
  if (token) {
    config = {
      ...config,
      token: token,
    };
  }
}

try {
  const res = await api.get('/newsletter', config);
  list = res.list;
  totalCount = res.total;
  totalPages = Math.ceil(totalCount / pageSize);
} catch {
  return new Response(null, { status: 404 });
}

// Pagination helpers
const generatePageUrl = (page: number) => {
  const newUrl = new URL(url);
  newUrl.searchParams.set('page', page.toString());
  return newUrl.pathname + newUrl.search;
};

const getVisiblePages = () => {
  const pages = [];
  const showPages = 5; // Show 5 page numbers
  let start = Math.max(1, currentPage - Math.floor(showPages / 2));
  let end = Math.min(totalPages, start + showPages - 1);

  // Adjust start if we're near the end
  if (end - start < showPages - 1) {
    start = Math.max(1, end - showPages + 1);
  }

  for (let i = start; i <= end; i++) {
    pages.push(i);
  }

  return pages;
};
---

<Layout>
  <main
    class="codex-editor m-auto mb-24 max-w-screen-md object-center px-4 pt-4 text-left md:pt-8"
  >
    <div
      class="mt-8 mb-12 flex items-center justify-center space-x-4 text-sm text-zinc-500 dark:text-zinc-400"
    >
      <span class="flex items-center">
        <svg class="mr-2 h-4 w-4" fill="currentColor" viewBox="0 0 20 20">
          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        {totalCount} newsletters
      </span>
    </div>

    <!-- Newsletter Grid -->
    <div class="grid grid-cols-1 gap-6 md:grid-cols-2">
      <SignedIn>
        <a
          href="/edit"
          class="flex items-center justify-center rounded-md bg-zinc-100/50 p-4 transition-colors duration-200 hover:bg-zinc-200/50 dark:bg-zinc-900/50 dark:hover:bg-zinc-800"
        >
          <span
            class="flex items-center gap-2 font-medium text-zinc-700 dark:text-zinc-200"
          >
            <svg
              class="h-6 w-6"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 4v16m8-8H4"></path>
            </svg>
          </span>
        </a>
      </SignedIn>

      {
        list.map((newsletter) => (
          <article class="relative rounded-md bg-zinc-100/50 p-4 dark:bg-zinc-900/50">
            {!newsletter.isPublished && (
              <span class="absolute top-0 left-0 z-10 flex size-3">
                <span class="absolute inline-flex h-full w-full animate-ping rounded-full bg-yellow-400 opacity-75" />
                <span class="relative inline-flex size-3 rounded-full bg-yellow-500" />
              </span>
            )}

            <div class="flex items-start justify-between gap-4">
              <a
                href={`/archive/${newsletter.slug}`}
                class="group flex flex-1 flex-col gap-2 no-underline hover:text-yellow-600 hover:no-underline"
              >
                <h2 class="relative line-clamp-2 text-xl font-bold text-slate-900 transition-colors duration-300 group-hover:text-yellow-600 dark:text-white dark:group-hover:text-yellow-400">
                  {newsletter.slug
                    .split('-')
                    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                    .join(' ')}
                </h2>
                <div class="mb-4 flex items-center text-sm text-zinc-500 dark:text-zinc-400">
                  <svg
                    class="mr-2 h-4 w-4"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <time
                    datetime={newsletter.publishedAt || newsletter.updatedAt}
                  >
                    {new Date(
                      newsletter.publishedAt || newsletter.updatedAt
                    ).toLocaleDateString('es-ES', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                    })}
                  </time>
                </div>
              </a>

              <SignedIn>
                <a
                  href={`/edit/${newsletter.slug}`}
                  class="inline-flex flex-shrink-0 items-center rounded-lg bg-white px-3 py-1.5 text-xs font-medium text-zinc-600 no-underline transition-colors duration-200 hover:bg-zinc-200/50 hover:no-underline dark:bg-zinc-950 dark:text-zinc-400 dark:hover:bg-zinc-800"
                >
                  <svg
                    class="mr-1 h-3 w-3"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                    />
                  </svg>
                  Editar
                </a>
              </SignedIn>
            </div>
          </article>
        ))
      }
    </div>

    {
      totalPages > 1 && (
        <div class="mt-12 flex items-center justify-center space-x-2">
          {currentPage > 1 && (
            <a
              href={generatePageUrl(currentPage - 1)}
              class="inline-flex items-center rounded-md bg-zinc-100/50 px-3 py-2 text-sm font-medium text-zinc-600 no-underline transition-colors duration-200 hover:bg-zinc-200/50 hover:no-underline dark:bg-zinc-900/50 dark:text-zinc-400 dark:hover:bg-zinc-800"
            >
              <svg
                class="mr-1 h-4 w-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 19l-7-7 7-7"
                />
              </svg>
              Anterior
            </a>
          )}

          <div class="flex items-center space-x-1">
            {getVisiblePages().map((page) => (
              <a
                href={generatePageUrl(page)}
                class={`inline-flex h-10 w-10 items-center justify-center rounded-md text-sm font-medium no-underline transition-colors duration-200 hover:no-underline ${
                  page === currentPage
                    ? 'bg-yellow-500 text-white hover:bg-yellow-600'
                    : 'bg-zinc-100/50 text-zinc-600 hover:bg-zinc-200/50 dark:bg-zinc-900/50 dark:text-zinc-400 dark:hover:bg-zinc-800'
                }`}
              >
                {page}
              </a>
            ))}
          </div>

          {currentPage < totalPages && (
            <a
              href={generatePageUrl(currentPage + 1)}
              class="inline-flex items-center rounded-md bg-zinc-100/50 px-3 py-2 text-sm font-medium text-zinc-600 no-underline transition-colors duration-200 hover:bg-zinc-200/50 hover:no-underline dark:bg-zinc-900/50 dark:text-zinc-400 dark:hover:bg-zinc-800"
            >
              Siguiente
              <svg
                class="ml-1 h-4 w-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </a>
          )}
        </div>
      )
    }
  </main>
</Layout>
